#包含配置文件
include=etc/fpm.d/*.conf
[global]
pid = /usr/local/php/var/run/php-fpm.pid
error_log = /usr/local/php/var/log/php-fpm.log

#设置日志等级 可取值alert, error, warning, notice, debug
log_level = notice

#将fpm转至后台运行，如果设置为“no”，那么fpm会运行在前台
daemonize = yes　　　　　　　　　　 

[www]
;prefix = /path/to/pools/$pool   如果没有制定，将使用全局prefix替代

#两种监听方式  理论上sock方式更快点，不用走网络
fpm监听端口，即nginx中php处理的地址，一般默认值即可。
可用格式为: ‘ip:port', ‘port', ‘/path/to/unix/socket'. 每个进程池都需要设置.

listen = /tmp/php-cgi.sock  //unix socket 方式  重启后将自动生成socket文件

#指定用户名和组必须存在

#指定生成的socket文件用户和组，以及访问模式 nobody
listen.owner = www
listen.group = www
listen.mode = 0666

listen = 127.0.0.1:9000

#指定php-fpm进程的用户名和组
user = www
group = www

listen.backlog = -1
#允许FastCGI客户端连接的IPv4地址，多个地址用','分隔，为空则允许任何地址发来链接请求
listen.allowed_clients = 127.0.0.1

pm = dynamic
pm.max_children = 10
pm.start_servers = 2
pm.min_spare_servers = 1
pm.max_spare_servers = 6
#选择进程池管理器如何控制子进程的数量
　　static：　　对于子进程的开启数路给定一个锁定的值(pm.max_children)
　　dynamic:　 子进程的数目为动态的，它的数目基于下面的指令的值(以下为dynamic适用参数)
　　　　pm.max_children：  同一时刻能够存货的最大子进程的数量
　　　　pm.start_servers： 在启动时启动的子进程数量
　　　　pm.min_spare_servers： 处于空闲"idle"状态的最小子进程，如果空闲进程数量小于这个值，那么相应的子进程会被创建
　　　　pm.max_spare_servers： 最大空闲子进程数量，空闲子进程数量超过这个值，那么相应的子进程会被杀掉。
　　ondemand： 在启动时不会创建，只有当发起请求链接时才会创建(pm.max_children, pm.process_idle_timeout)


request_terminate_timeout = 100

#设置为0，表示关闭  开启慢日志
request_slowlog_timeout = 10
slowlog = var/log/slow.log


#限制FPM执行解析的扩展名
security.limit_extensions = .php .php3 .php4 .php5　　
